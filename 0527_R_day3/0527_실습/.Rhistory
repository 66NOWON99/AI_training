my.rm.na <- function(df){
rmv <- c()
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){  #col의 모든 행을 확인해서 any; 행이 하나라도 T면(is.na=T면) 값이 T가 된다.
print(df[i,])
rmv <- c(rmv, i)
}
}
return (df[-rmv,])
}
heart.new<-my.rm.na(heart)
#1
my.rm.na <- function(df){
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){
for(j in 1:ncol(df)){
if(is.na(df[i,j])==TRUE){
row<-df[-i,j]
df[i,j]=mean(row,na.rm=T)}
}
}
}
return (df)
}
ht.new<-my.rm.na(heart)
table(is.na(ht.new))
table(is.na(heart))
#2
tapply(heart$Chol,list(heart$AHD,heart$Sex),mean)
##3
heart%>%filter(heart$ChestPain=="typical"&heart$Chol>mean(heart$Chol))%>%select(ChestPain,Chol,AHD)
#4
x<-heart%>%filter(heart$Age>mean(heart$Age))
x$AHD.N.Y<-ifelse(x$AHD=="Yes",1,0)
x
x<-x[,-c(2:13)]
x
heart<-read.csv("C:\\Users\\ilifo\\Desktop\\0526_R_day2\\Heart.csv",header = T,row.names="X",stringsAsFactors = T)
heart
my.rm.na <- function(df){
rmv <- c()
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){  #col의 모든 행을 확인해서 any; 행이 하나라도 T면(is.na=T면) 값이 T가 된다.
print(df[i,])
rmv <- c(rmv, i)
}
}
return (df[-rmv,])
}
heart.new<-my.rm.na(heart)
#1
my.rm.na <- function(df){
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){
for(j in 1:ncol(df)){
if(is.na(df[i,j])==TRUE){
row<-df[-i,j]
df[i,j]=mean(row,na.rm=T)}
}
}
}
return (df)
}
ht.new<-my.rm.na(heart)
table(is.na(ht.new))
table(is.na(heart))
#2
tapply(heart$Chol,list(heart$AHD,heart$Sex),mean)
##3
heart%>%filter(heart$ChestPain=="typical"&heart$Chol>mean(heart$Chol))%>%select(ChestPain,Chol,AHD)
#4
x<-heart%>%filter(heart$Age>mean(heart$Age))
x$AHD.N.Y<-ifelse(x$AHD=="Yes",1,0)
library(dplyr)
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
my.rm.na <- function(df){
rmv <- c()
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){  #col의 모든 행을 확인해서 any; 행이 하나라도 T면(is.na=T면) 값이 T가 된다.
print(df[i,])
rmv <- c(rmv, i)
}
}
return (df[-rmv,])
}
heart.new<-my.rm.na(heart)
#1
my.rm.na <- function(df){
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){
for(j in 1:ncol(df)){
if(is.na(df[i,j])==TRUE){
row<-df[-i,j]
df[i,j]=mean(row,na.rm=T)}
}
}
}
return (df)
}
ht.new<-my.rm.na(heart)
table(is.na(ht.new))
table(is.na(heart))
#2
tapply(heart$Chol,list(heart$AHD,heart$Sex),mean)
##3
heart%>%filter(heart$ChestPain=="typical"&heart$Chol>mean(heart$Chol))%>%select(ChestPain,Chol,AHD)
#4
x<-heart%>%filter(heart$Age>mean(heart$Age))
x$AHD.N.Y<-ifelse(x$AHD=="Yes",1,0)
x
x<-x[,-c(2:13)]
x
install.packages(dplyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
x
library(dplyr)
my.rm.na <- function(df){
rmv <- c()
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){  #col의 모든 행을 확인해서 any; 행이 하나라도 T면(is.na=T면) 값이 T가 된다.
print(df[i,])
rmv <- c(rmv, i)
}
}
return (df[-rmv,])
}
heart.new<-my.rm.na(heart)
#1
my.rm.na <- function(df){
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){
for(j in 1:ncol(df)){
if(is.na(df[i,j])==TRUE){
row<-df[-i,j]
df[i,j]=mean(row,na.rm=T)}
}
}
}
return (df)
}
ht.new<-my.rm.na(heart)
table(is.na(ht.new))
table(is.na(heart))
#2
tapply(heart$Chol,list(heart$AHD,heart$Sex),mean)
##3
heart%>%filter(heart$ChestPain=="typical"&heart$Chol>mean(heart$Chol))%>%select(ChestPain,Chol,AHD)
#4
x<-heart%>%filter(heart$Age>mean(heart$Age))
x$AHD.N.Y<-ifelse(x$AHD=="Yes",1,0)
x
x<-x[,-c(2:13)]
x
heart[-3,1]
heart[3,1]
heart
heart[-3,1]
heart
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
ggplot(data = mpg, aes(x=displ, y = hwy))
#install.packages(ggplot2)
#library(ggplot2)
library(dplyr)
heart<-read.csv("C:\\Users\\ilifo\\Desktop\\0526_R_day2\\Heart.csv",header = T,row.names="X",stringsAsFactors = T)
my.rm.na <- function(df){
rmv <- c()
for( i in 1:nrow(df)){
if (any(is.na(df[i,]))){  #col의 모든 행을 확인해서 any; 행이 하나라도 T면(is.na=T면) 값이 T가 된다.
print(df[i,])
rmv <- c(rmv, i)
}
}
return (df[-rmv,])
}
my.rm.na <- function(df){
rmv <- c()
for( i in 1:length(df)){ #length// col개수
if (any(is.na(df[,i]))){  #col의 모든 행을 확인해서 any; 행이 하나라도 T면(is.na=T면) 값이 T가 된다.
df[,i]<-ifelse(is.na(df[,i]),mean(as.integer(df[,i]),na.rm=T ),df[,i])
#factor값을 int로 바꿈 as.integer
}
}
return (df)
}
#is.na(heart[,13]) #vector를 is.na에 넣으면 vector와 길이가 똑같은 논리형 vector가 return됨
#heart[,13] #vector
heart.new<-my.rm.na(heart)
heart.new
table(is.na(heart.new))
v1<-c(T,F,T,T,F)
v2<-1:5
v1;v2
v2[v1] <- 100
v2
v2[!v1]<-10
v2
tapply(v2,v1,sum)
v1
############################
#데이터 시각화
x<-c(2,5,8,5,7,10,11,3,4,7,12,15)
y<-c(1:12)
z<-c(3.5,2.2,1.5,4.6,6.9)
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="n")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="p")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="l")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="h")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="s")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="S")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="o")
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="n")
point(z,pch=1,cex=1)
points(z,pch=1,cex=1)
points(z,pch=1,cex=1) #type="n"
points(z,pch=5,cex=1)
points(z,pch=11,cex=1)
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="n")
points(z,pch=1,cex=1) #type="n"
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="n")
points(z,pch=5,cex=1)
plot(x,y,main="PLOT",sub="Test",xlab="x",ylab="y",type="n")
points(z,pch=11,cex=1) #유다별
points(z,pch=5,cex=1) #마름모
points(z,pch=1,cex=1) #type="n" , 동그라미
boxplot(x,z)
pie(x)
barplot(x)
hist(x)
boxplot(x,z)
############################
#데이터 시각화
x<-c(2,5,8,5,7,10,11,3,4,7,12,150)
boxplot(x,z)
############################
#데이터 시각화
x<-c(2,5,8,5,7,10,11,3,4,7,12,15)
boxplot(x,z)
pie(x)
boxplot(x,z)
pie(x)
barplot(x)
hist(x)
hist(x)
barplot(x)
hist(x)
barplot(x)
hist(x)
#산점도
a<-data.frame(x,y)
pairs(a)
library(MASS)
############################
#데이터 시각화
x<-c(2,5,8,5,7,10,11,3,4,7)
y<-c(1:10)
z<-c(3.5,2.2,1.5,4.6,6.9,3.5,2.2,1.5,4.6,6.9)
a<-data.frame(x,y,z)
pairs(a)
parcoord(a)
y<-c(1:8)
parcoord(a)
a<-data.frame(x,y,z)
parcoord(a)
y<-c(1:10)
#산점도
a<-data.frame(x,y)
pairs(a)
a<-data.frame(x,y,z)
parcoord(a)
ggplot(data=mpg, aes(x=displ, y=hwy)) + geom_point() + xlim(3,6)+ylim(10,30)
library(dplyr)
mpg
df_mpg <- mpg %>%
group_by(drv)
df_mpg
mpg
df_mpg <- mpg %>%
group_by(drv)%>%
summarise(mean_hwy = mean(hwy))
df_mpg
ggplot(data=df_mpg, aes(x=drv, y=mean_hwy))
ggplot(data=df_mpg, aes(x=drv, y=mean_hwy))+geom_col()
str(mpg)
mpg<-as.data.frame(mpg) #ggplot2
str(mpg)#tibble->data.frame format
df_mpg <- mpg %>%
group_by(drv)%>%
summarise(mean_hwy = mean(hwy))
df_mpg
ggplot(data=df_mpg, aes(x=drv, y=mean_hwy))+geom_col()
ggplot(data=df_mpg, aes(x=reorder(drv,-mean_hwy), y=mean_hwy))+geom_col()
ggplot(data=df_mpg, aes(x=reorder(drv,+mean_hwy), y=mean_hwy))+geom_col()
install.packages("foreign")
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss(file="C:\Users\ilifo\Desktop\0527_R_day3\\Koweps_hpc10_2015_beta1.sav",to.data.frame=T)
welfare <- raw_welfare
welfare
raw_welfare <- read.spss(file="C:\\Users\\ilifo\\Desktop\\0527_R_day3\\Koweps_hpc10_2015_beta1.sav",to.data.frame=T)
welfare <- raw_welfare
welfare
head(welfare)
head(welfare)
str(welfare)
tail(welfare)
view(welfare)
View(welfare)
library(MASS)
library(foreign)
library(dplyr)
library(ggplot2)
library(readxl)
raw_welfare <- read.spss(file="C:\\Users\\ILIFO-017\\Desktop\\backup-20200527\\0527_R_day3\\Koweps_hpc10_2015_beta1.sav",to.data.frame=T)
welfare <- raw_welfare
welfare <-rename(welfare,sex=h10_g3, birth=h10_g4, marriage=h10_g10, religion = h10_g11, income=p1002_8aq1,
code_job=h10_eco9, code_region=h10_reg7)
library(MASS)
welfare_4 <-welfare%>%filter(welfare$sex!=3 & welfare$income>=0)
welfare_4$ages <- ifelse(welfare_4$birth>2010,0,
ifelse(welfare_4$birth>2000,10,
ifelse(welfare_4$birth>1990,20,
ifelse(welfare_4$birth>1980,30,
ifelse(welfare_4$birth>1970,40,
ifelse(welfare_4$birth>1960,50,
ifelse(welfare_4$birth>1950,60,
ifelse(welfare_4$birth>1940,70,
ifelse(welfare_4$birth>1930,80,
ifelse(welfare_4$birth>1920,90,100))))))))))
#welfare_4$ages
#wel4<-data.framewelfare_4
set<-welf
#welfare_4$ages
#wel4<-data.framewelfare_4
set<-data.frame(welfare_4$ages,welfare_4$sex,welfare_4$income)
set
ggplot(set, aes(x=ages, y=sex, fill=as.factor(income)))+geom_bar(stat='identity')
#welfare_4$ages
#wel4<-data.framewelfare_4
set<-data.frame(ages=welfare_4$ages,sex=welfare_4$sex,income=welfare_4$income)
set
ggplot(set, aes(x=ages, y=sex, fill=as.factor(income)))+geom_bar(stat='identity')
library(ggplot)
ggplot(set, aes(x=ages, y=sex, fill=income))+geom_bar(stat='identity')
library(ggplot2)
ggplot(set, aes(x=ages, y=sex, fill=income))+geom_bar(stat='identity')
set
ggplot(set, aes(x=ages, y=income, fill=sex))+geom_bar(stat='identity')
ggplot(set, aes(x=ages, y=income, fill=as.integer(sex)))+geom_bar(stat='identity')
ggplot(set, aes(x=ages, y=income, fill=as.factor(sex)))+geom_bar(stat='identity')
ggplot(set, aes(x=ages, y=income, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
#전처리 전
ggplot(welfare, aes(x=ages, y=income, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
#전처리 전
ggplot(welfare, aes(x=age, y=income, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
#전처리 전
ggplot(welfare, aes(x=welfare$birth, y=income, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
#전처리 전
ggplot(welfare, aes(x=birth, y=income, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
#전처리 후
ggplot(set, aes(x=ages, y=income, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
#######################################
#5.직업별 월급 차이
#전처리 전
boxplot(welfare$income~welfare$code_job,xlab="Job",ylab="Income",main="Job vs Income")
#######################################
#5.직업별 월급 차이
#전처리 전
boxplot(welfare$income~welfare$code_job,xlab="Job",ylab="Income",main="Job vs Income")
table(is.na(welfare$code_job))
welfare_5<-welfare%>%filter(is.na(welfare$code_job)==FALSE)
table(is.na(welfare_5$code_job))
#전처리 후
#직업의 분야를 나누는 기준을 알 수 없기에 모든 직업을 포함하는 그래프로 표시했다.
boxplot(welfare_5$income~welfare_5$code_job,xlab="Job",ylab="Income",main="Job vs Income")
#전처리 후
#직업의 분야를 나누는 기준을 알 수 없기에 모든 직업을 포함하는 그래프로 표시했다.
boxplot(welfare_5$income~welfare_5$code_job,xlab="Job",ylab="Income",main="Job vs Income")
###########################################
#6.성별 직업 빈도
plot(welfare$code_job,welfare$sex)#,xlab="Job",ylab="Income",main="Job vs Income")
welfare_6<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex!=3)
welfare_6<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex!=3)
set1<-data.frame(sex=welfare_6$sex,code_job=welfare_6$code_job)
ggplot(set1, aes(x=code_job, fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
ggplot(set1, aes(x=code_job,fill=as.factor(sex))) + geom_bar(stat='identity', position = 'dodge')
ggplot(set1, aes(x=code_job,fill=as.factor(sex))) + geom_bar(position = 'dodge')
set1<-data.frame(sex=welfare$sex,code_job=welfare$code_job)
ggplot(set1, aes(x=code_job,fill=as.factor(sex))) + geom_bar(position = 'dodge')
welfare_6<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex!=3)
welfare_6<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex!=3)
set2<-data.frame(sex=welfare_6$sex,code_job=welfare_6$code_job)
ggplot(set2, aes(x=code_job,fill=as.factor(sex))) + geom_bar(position = 'dodge')
#전처리 후
welfare_6<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex!=3)
set2<-data.frame(sex=welfare_6$sex,code_job=welfare_6$code_job)
ggplot(set2, aes(x=code_job,fill=as.factor(sex))) + geom_bar(position = 'dodge')
tapply(welfare_6$code_job,welfare_6$sex,sum)
barplot(welfare_6$code_job,welfare_6$sex)
plot(welfare_6$sex,welfare_6$code_job)
ggplot(data=welfare_6,aes(x=welfare_6$sex,y=welfare_6$code_job)) +geom_bar()
ggplot(data=welfare_6,aes(x=welfare_6$sex,y=welfare_6$code_job)) +geom_bar()
table(is.na(welfare_6$code_job))
welfare_1 <-welfare%>%filter(welfare$sex!=3 & welfare$income!=0)
income_mean<-tapply(welfare_1$income,welfare_1$sex,mean)
barplot(income_mean)
welfare_6<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex==2)
hist(x=welfare_6$code_job,y=welfare_6$sex)
table(is.na(welfare_6$code_job))
####그래프 2개 그려놓고 색 다르게 합치기? TT
##전처리 후
welfare_6f<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex==2)
f<-data.frame(welfare_6f$sex,welfare_6f$code_job)
f
hist(x=f[,2],xlab="Code_Job",main="Frequency of Code_Job ;Sex=2")
welfare_6m<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex==1)
m<-data.frame(welfare_6m$sex,welfare_6m$code_job)
m
hist(x=m[,2],xlab="Code_Job",main="Frequency of Code_Job ;Sex=1")
ggplot(set2, aes(x=code_job,fill=as.factor(sex))) + geom_bar(position = 'dodge')
####그래프 2개 그려놓고 색 다르게 합치기? TT
##전처리 후
welfare_6f<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex==2)
f<-data.frame(welfare_6f$sex,welfare_6f$code_job)
f
hist(x=f[,2],xlab="Code_Job",main="Frequency of Code_Job ;Sex=2")
welfare_6m<-welfare%>%filter(is.na(welfare$code_job)==FALSE & welfare$sex==1)
m<-data.frame(welfare_6m$sex,welfare_6m$code_job)
m
hist(x=m[,2],xlab="Code_Job",main="Frequency of Code_Job ;Sex=1")
##전처리 전
c<-data.frame(welfare$marriage,welfare$religion)
hist(c[,1])
hist(c[,1],xlab='혼인 상태',main='혼인상태 VS Frequency')
hist(c[,1],xlab='혼인 상태',main='혼인상태 vs Frequency')
##전처리 후
#종교 = 1
a<-welfare%>%filter(religion==1)
hist(x=a$marriage,xlab="marriage", main="Frequency of Marriage when Religion=1")
b<-welfare%>%filter(religion==2)
hist(x=b$marriage,xlab="marriage", main="Frequency of Marriage when Religion=2")
##전처리 후
#종교 = 1
a<-welfare%>%filter(religion==1)
hist(x=a$marriage,xlab="marriage", main="Frequency of Marriage when Religion=1")
ggplot(set2, aes(x=code_job,fill=as.factor(sex))) + geom_bar(position = 'dodge')
d<-c(1,2)
f<-welfare
ggplot(data=c,aes(x=c[,1])) + geom_bar()
length(c)
str(welfare)
set3<-data.frame(marriage=welfare$marriage,religion=welfare$religion)
ggplot(set3, aes(x=marriage,fill=as.factor(religion))) + geom_bar(position = 'dodge')
ggplot(set3, aes(x=marriage,fill=as.factor(religion))) + geom_bar(position = 'dodge',main='marriage vs religion')
ggplot(set3, aes(x=marriage,fill=as.factor(religion)),,main='marriage vs religion') + geom_bar(position = 'dodge')
ggplot(set3, aes(x=marriage,fill=as.factor(religion))) + geom_bar(position = 'dodge') +main='mvsr'
ggplot(set3, aes(x=marriage,fill=as.factor(religion))) + geom_bar(position = 'dodge')
#전처리 전
boxplot(welfare$birth~welfare$code_region)
ggplot(data=tmp,aes(x=religion,y=ages,fill=as.factor(ages)))+ geom_bar(stat='identity',position='fill')
#전처리 전
boxplot(welfare$birth~welfare$code_region)
#전처리 과정
table(is.na(welfare$code_region))
tmp<-data.frame(religion=welfare$code_region,birth=welfare$birth)
tmp
tmp$ages <- ifelse(tmp$birth>2010,0,
ifelse(tmp$birth>2000,10,
ifelse(tmp$birth>1990,20,
ifelse(tmp$birth>1980,30,
ifelse(tmp$birth>1970,40,
ifelse(tmp$birth>1960,50,
ifelse(tmp$birth>1950,60,
ifelse(tmp$birth>1940,70,
ifelse(tmp$birth>1930,80,
ifelse(tmp$birth>1920,90,100))))))))))
tmp$ages
tmp
ggplot(data=tmp,aes(x=religion,y=ages,fill=as.factor(ages)))+ geom_bar(stat='identity',position='fill')
#전처리 전
barplot(welfare$birth~welfare$code_region)
tmp1<-data.frame(birth=welfare$birth,code_region=welfare$code_region)
#전처리 과정
table(is.na(welfare$code_region))
tmp<-data.frame(region=welfare$code_region,birth=welfare$birth)
tmp
tmp$ages <- ifelse(tmp$birth>2010,0,
ifelse(tmp$birth>2000,10,
ifelse(tmp$birth>1990,20,
ifelse(tmp$birth>1980,30,
ifelse(tmp$birth>1970,40,
ifelse(tmp$birth>1960,50,
ifelse(tmp$birth>1950,60,
ifelse(tmp$birth>1940,70,
ifelse(tmp$birth>1930,80,
ifelse(tmp$birth>1920,90,100))))))))))
tmp$ages
tmp
ggplot(data=tmp,aes(x=region,y=ages,fill=as.factor(ages)))+ geom_bar(stat='identity',position='fill')
tmp1<-data.frame(birth=welfare$birth,region=welfare$code_region)
ggplot(data=tmp1,aes(x=region,y=ages,fill=as.factor(ages)))+ geom_bar(stat='identity',position='fill')
tmp1<-data.frame(birth=welfare$birth,region=welfare$code_region,birth=welfare$birth)
ggplot(data=tmp1,aes(x=region,y=birth,fill=as.factor(ages)))+ geom_bar(stat='identity',position='fill')
tmp1<-data.frame(birth=welfare$birth,region=welfare$code_region,birth=welfare$birth)
ggplot(data=tmp1,aes(x=region,y=birth,fill=as.factor(birth)))+ geom_bar(stat='identity',position='fill')
