---
title: "Week 1 - Homework"
author: "STAT 420, Summer 2020, NOH JINSEO"
date: '0525'
output:
  html_document: 
    theme: readable
    toc: yes  
  pdf_document: default
urlcolor: cyan
---

## Exercise 1 (Subsetting and Statistics)

For this exercise, we will use the `msleep` dataset from the `ggplot2` package.

**(a)** Install and load the `ggplot2` package. **Do not** include the installation command in your `.Rmd` file. (If you do it will install the package every time you knit your file.) **Do** include the command to load the package into your environment.
```{r}
library(ggplot2)
df=msleep
```


**(b)** Note that this dataset is technically a `tibble`, not a data frame. How many observations are in this dataset? How many variables? What are the observations in this dataset?

```{r}
#df
#nrow(df)
#ncol(df)
dim(df)
names(df)
summary(df)
str(df)
```

The number of variables is 11 and the number of observations is 83. 
Observations are set of name, genus, vore, order, conservation, sleep_total, sleep_rem, sleep_cycle, awake, brainwt,and bodywt.    

**(c)** What is the mean hours of REM sleep of individuals in this dataset?
```{r}
#df$sleep_rem
#length(na.omit(df$sleep_rem))
mean(na.omit(df$sleep_rem))
```
The mean hours of REM sleep of individuals in this dataset is 1.87541 hours.

**(d)** What is the standard deviation of brain weight of individuals in this dataset?
```{r}
sd(na.omit(df$brainwt))
```
 The standard deviation of brain weight of individuals in this dataset is 0.9764137.

**(e)** Which observation (provide the `name`) in this dataset gets the most REM sleep?
```{r}
max_REM=max(na.omit(df$sleep_rem))
max_id=0
for(i in length(df)){if (df$sleep_rem[i] == max_REM) max_id=i}
max_id

df
names(df)
df[df$sleep_rem==max(na.omit(df$sleep_rem)),"name"]
```
"Thick-tailed opposum"

**(f)** What is the average bodyweight of carnivores in this dataset?
```{r}
mean(df$bodywt)
```
the average bodyweight of carnivores in this dataset is 166.1363.
***

## Exercise 2 (Plotting)

For this exercise, we will use the `birthwt` dataset from the `MASS` package.

**(a)** Note that this dataset is a data frame and all of the variables are numeric. How many observations are in this dataset? How many variables? What are the observations in this dataset?
```{r}
library(MASS)
df1=data.frame(birthwt)
dim(df1)
str(df1)

#df1
```
The number of variables is 10 and the number of observations is 189 in this dataset.

**(b)** Create a scatter plot of birth weight (y-axis) vs mother's weight before pregnancy (x-axis). Use a non-default color for the points. (Also, be sure to give the plot a title and label the axes appropriately.) Based on the scatter plot, does there seem to be a relationship between the two variables? Briefly explain.

```{r}
?birthwt
?plot
plot(bwt~lwt,data=df1,main="Mother's Weight before Pregnancy vs Birth Weight",xlab="Mother's Weight (pound)",ylab = "Birth Weight (grams)")

```
It seems hard to have a relationship between the two variables because they spread irregularly.

**(c)** Create a scatter plot of birth weight (y-axis) vs mother's age (x-axis). Use a non-default color for the points. (Also, be sure to give the plot a title and label the axes appropriately.) Based on the scatter plot, does there seem to be a relationship between the two variables? Briefly explain.
```{r}
plot(bwt~age,data=df1,main="birth weight vs mother's age",xlab="mother's age (year)", ylab="birth weight (pound)")
```
It seems hard to have a relationship between the two variables because they spread irregularly.

**(d)** Create side-by-side boxplots for birth weight grouped by smoking status. Use non-default colors for the plot. (Also, be sure to give the plot a title and label the axes appropriately.) Based on the boxplot, does there seem to be a difference in birth weight for mothers who smoked? Briefly explain.
```{r}
boxplot(bwt~smoke,data=df1)
```
It seems to be different between birth weight for mothers who smoked and non-smoked because their min,max values, and interquartile range have noticeable difference.


***

## Exercise 3 (Importing Data, More Plotting)

For this exercise we will use the data stored in [`nutrition-2018.csv`](nutrition-2018.csv). It contains the nutritional values per serving size for a large variety of foods as calculated by the USDA in 2018. It is a cleaned version totaling 5956 observations and is current as of April 2018.

The variables in the dataset are:

- `ID` 
- `Desc` - short description of food
- `Water` - in grams
- `Calories` - in kcal
- `Protein` - in grams
- `Fat` - in grams
- `Carbs` - carbohydrates, in grams
- `Fiber` - in grams
- `Sugar` - in grams
- `Calcium` - in milligrams
- `Potassium` - in milligrams
- `Sodium` - in milligrams
- `VitaminC` - vitamin C, in milligrams
- `Chol` - cholesterol, in milligrams
- `Portion` - description of standard serving size used in analysis

**(a)** Create a histogram of `Calories`. Do not modify `R`'s default bin selection. Make the plot presentable. Describe the shape of the histogram. Do you notice anything unusual?
```{r}
df=read.csv("C:\\Users\\ilifo\\Desktop\\w01-hw-assign-su20(1)\\nutrition-2018.csv")
hist(df$Calories)
```
Frequency of calories maintains around 800 when calories are between 0 and 200.

**(b)** Create a scatter plot of calories (y-axis) vs protein (x-axis). Make the plot presentable. Do you notice any trends? Do you think that knowing only the protein content of a food, you could make a good prediction of the calories in the food?

```{r}
plot(df$Calories~df$Protein,data=df)
```
As Protein increases, minimum value of calories increases. However, knowing only the protein content of a food could not make a good prediction of the calories in the food because range of calories when protein is fixed is so various.

**(c)** Create a scatter plot of `Calories` (y-axis) vs `4 * Protein + 4 * Carbs + 9 * Fat` (x-axis). Make the plot presentable. You will either need to add a new variable to the data frame, or use the `I()` function in your formula in the call to `plot()`. If you are at all familiar with nutrition, you may realize that this formula calculates the calorie count based on the protein, carbohydrate, and fat values. You'd expect then that the result here is a straight line. Is it? If not, can you think of any reasons why it is not?
```{r}
#plot(df$Calories~df$Protein*4 +df$Carbs*9 +df$Fat,data=df)
#y<-df$Protein*4 +df$Carbs*9 +df$Fat
#plot(df$Calories~y,data=df)
plot(df$Calories~I(df$Protein*4 +df$Carbs*9 +df$Fat),data=df)

```


***

## Exercise 4 (Writing and Using Functions)

For each of the following parts, use the following vectors:

```{r}
a = 1:10
b = 10:1
c = rep(1, times = 10)
d = 2 ^ (1:10)
```

**(a)** Write a function called `sum_of_squares`.

- Arguments:
    - A vector of numeric data `x`
- Output:
    - The sum of the squares of the elements of the vector $\sum_{i = 1}^n x_i^2$
    
Provide your function, as well as the result of running the following code:

```{r, eval = FALSE}
sum_of_squares<-function(x){
  sum=0
  for(i in 1:length(x)){
      #sum<-sum+as.integer(x[i])^2
      #print(sum)
    #print(x[i]^2)
    sum=sum+x[i]^2  
  }
  print (sum)
}

sum_of_squares(x = a)
sum_of_squares(x = c(c, d))

```

**(b)** Using only your function `sum_of_squares()`, `mean()`, `sqrt()`, and basic math operations such as `+` and `-`, calculate

\[
\sqrt{\frac{1}{n}\sum_{i = 1}^n (x_i - 0)^{2}}
\]

where the $x$ vector is `d`.
```{r}
sqrt(mean(sum_of_squares(d)))
```

**(c)** Using only your function `sum_of_squares()`, `mean()`, `sqrt()`, and basic math operations such as `+` and `-`, calculate

\[
\sqrt{\frac{1}{n}\sum_{i = 1}^n (x_i - y_i)^{2}}
\]

where the $x$ vector is `a` and the $y$ vector is `b`.

***

## Exercise 5 (More Writing and Using Functions)

For each of the following parts, use the following vectors:

```{r}
set.seed(42)
x = 1:100
y = rnorm(1000)
z = runif(150, min = 0, max = 1)
```

**(a)** Write a function called `list_extreme_values`.

- Arguments:
    - A vector of numeric data `x`
    - A positive constant, `k`, with a default value of `2`
- Output:
    - A list with two elements:
        - `small`, a vector of elements of `x` that are $k$ sample standard deviations less than the sample mean. That is, the observations that are smaller than $\bar{x} - k \cdot s$.
        - `large`, a vector of elements of `x` that are $k$ sample standard deviations greater than the sample mean. That is, the observations that are larger than $\bar{x} + k \cdot s$.

Provide your function, as well as the result of running the following code:

```{r, eval = FALSE}
list_extreme_values(x = x, k = 1)
list_extreme_values(x = y, k = 3)
list_extreme_values(x = y, k = 2)
list_extreme_values(x = z, k = 1.5)
```

**(b)** Using only your function `list_extreme_values()`, `mean()`, and basic list operations, calculate the mean of observations that are greater than 1.5 standard deviation above the mean in the vector `y`.

