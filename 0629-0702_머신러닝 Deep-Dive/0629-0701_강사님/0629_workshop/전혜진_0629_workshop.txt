ex1=np.loadtxt('ex1.txt')
#ex1

x_data=ex1[:,0:2]
y_data=ex1[:,1:2]
# print(x_data)
# print(y_data)

with tf.Graph().as_default():
    x=tf.placeholder(tf.float32, shape=[None,2])
    y=tf.placeholder(tf.float32, shape=None)
    
    w=tf.Variable([[0,0]], dtype=tf.float32, name='weight')
    b=tf.Variable(0, dtype=tf.float32, name='bias')
    
    y_hat = tf.matmul(w,tf.transpose(x))
    
    loss = tf.reduce_mean(tf.square(y-y_hat))
    
    optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.005)
    train = optimizer.minimize(loss)
    
    init = tf.global_variables_initializer()
    with tf.Session() as sess:
        sess.run(init)
        for step in range(10000):
            sess.run(train, feed_dict={x:x_data, y:y_data})
            if (step % 500 == 0):
                print(step, sess.run([w]))
        print(step,sess.run([w,b]))