import tensorflow as tf
import numpy as np


ex1 = np.loadtxt("ex1.txt")


print(x_data.shape)
x_train = ex1[:,1:2]
y_train = ex1[:,2:3]
# print(x_train)
# print(y_train)


with tf.Graph().as_default():
    x = tf.placeholder(tf.float32, shape=[None,1])
    y = tf.placeholder(tf.float32, shape=None)

    w = tf.Variable([[0]], dtype=tf.float32, name='weight')
    b = tf.Variable(0, dtype=tf.float32, name='bias')

    y_hat = tf.matmul(w, tf.transpose(x)) + b

    loss = tf.reduce_mean(tf.square(y - y_hat))

    optimizer = tf.train.GradientDescentOptimizer(learning_rate=0.005)
    train = optimizer.minimize(loss)
    
    init = tf.global_variables_initializer()
    with tf.Session() as sess:
        sess.run(init)
        for step in range(100000):
            sess.run(train, feed_dict={x:x_train, y:y_train})
            if (step % 5000 == 0):
                print(step, sess.run([w, b]))
        print(step, sess.run([w, b]))
